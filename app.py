import nmap
from flask import Flask, render_template, request

app = Flask(__name__)

import ipaddress
import re
import subprocess



def get_ip_address():
    # Execute ifconfig command
    result = subprocess.run(["ifconfig"], capture_output=True, text=True)
    
    # Check if the command was successful
    if result.returncode == 0:
        output = result.stdout
        
        # Use regular expression to extract IP address
        ip_pattern = r"inet (\d+\.\d+\.\d+\.\d+)"
        match = re.search(ip_pattern, output)
        
        if match:
            ip_address = match.group(1)
            return ip_address
        else:
            return "No IP address found"
    else:
        return "Error executing ifconfig"

# Function to scan local network and get available devices
def scan_local_network():
    nm = nmap.PortScanner() 
    ip_address = get_ip_address()
    subnet = ip_address.split('/')[0] + "/24" 
    network = ipaddress.ip_network(subnet, strict=False)
    nm.scan(hosts=str(network), arguments='-sn')  # Adjust subnet mask as per your network
    hosts_list = [x for x in nm.all_hosts() if nm[x]['status']['state'] == 'up']
    return hosts_list

# Function to perform aggressive Nmap scan and get CVE data
def aggressive_scan_and_get_cve(target):
    nm = nmap.PortScanner()
    nm.scan(hosts=target, arguments='-A -sV -sC --max-parallelism 64')  # Perform aggressive scan
    return nm.csv()

# Main route
@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        target = request.form['target']
        cve_data = aggressive_scan_and_get_cve(target)
        hosts_list = scan_local_network()  # Update hosts list after scanning
        return render_template('index.html', hosts=hosts_list, selected_target=target, cve_data=cve_data)
    else:
        hosts_list = scan_local_network()
        return render_template('index.html', hosts=hosts_list)

if __name__ == '__main__':
    app.run(debug=True)

